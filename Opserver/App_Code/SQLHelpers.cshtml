@using StackExchange.Opserver
@using StackExchange.Opserver.Data
@using StackExchange.Opserver.Data.SQL

@helper HealthDescription(SQLInstance n, IEnumerable<IMonitorStatus> ims, bool linkify = true, bool unknownIsHealthy = false)
{
    if (ims == null) { return; }
    var warning = ims.Where(ag => ag.MonitorStatus == MonitorStatus.Warning).ToList();
    var good = ims.Where(ag => ag.MonitorStatus == MonitorStatus.Good || (unknownIsHealthy && ag.MonitorStatus == MonitorStatus.Unknown)).ToList();
    var bad = ims.Except(warning).Except(good).ToList();
    if (linkify)
    {
        if (bad.Any())
        {
            @MonitorStatus.Critical.IconSpan() <a href="~/sql/databases?node=@n.Name.UrlEncode()">@bad.Count.ToComma()</a>
        }
        if (warning.Any())
        {
            @MonitorStatus.Warning.IconSpan() <a href="~/sql/databases?node=@n.Name.UrlEncode()">@warning.Count.ToComma()</a>
        }
        if (good.Any())
        {
            @MonitorStatus.Good.IconSpan() <a href="~/sql/databases?node=@n.Name.UrlEncode()">@good.Count.ToComma()</a>
        }    
    } 
    else {
        if (bad.Any())
        {
            @:@MonitorStatus.Critical.IconSpan() @bad.Count.ToComma()
        }
        if (warning.Any())
        {
            @:@MonitorStatus.Warning.IconSpan() @warning.Count.ToComma()
        }
        if (good.Any())
        {
            @:@MonitorStatus.Good.IconSpan() @good.Count.ToComma()
        }
    }
}

@helper HealthDescriptionAGs(SQLNode n, IEnumerable<IMonitorStatus> ims, bool minimal = false, bool icons = true)
{
    if (ims == null) { return; }
    var bad = ims.Where(ag => ag.MonitorStatus != MonitorStatus.Good).ToList();
    var good = ims.Where(ag => ag.MonitorStatus == MonitorStatus.Good).ToList();
    if (minimal)
    {
        if (good.Any())
        {
            <span class="@(MonitorStatus.Good.TextClass())" title="@good.Count.Pluralize("Healthy Database")">@good.Count.ToComma()</span>
        }
        if (bad.Any())
        {
            <span class="@MonitorStatus.Critical.TextClass()" title="@bad.Count.Pluralize("Unhealthy Database")">(@bad.Count.ToComma())</span>
        }
    }
    else
    {
        if (bad.Any())
        {
            @:@MonitorStatus.Critical.IconSpan() @bad.Count.ToComma() Unhealthy
        }
        if (good.Any())
        {
            @:@MonitorStatus.Good.IconSpan() @good.Count.ToComma() Healthy
        }
    }
}