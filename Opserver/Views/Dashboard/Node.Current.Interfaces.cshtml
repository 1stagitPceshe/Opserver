@using StackExchange.Opserver.Data.Dashboard
@using StackExchange.Opserver.Models
@model Node
@helper Graph(Interface i, string type)
{
    if (i.IsUnwatched)
    {
        <div class="spark-no-data text-muted">No Data Available</div>
        return;
    }
    <img class="js-dashboard-spark" src="/graph/interface/@type.ToLower()/spark?id=@Model.Id&iid=@i.Id"  width="@Current.ViewSettings.SparklineChartWidth" height="@Current.ViewSettings.SparklineChartHeight" alt="" data-nid="@Model.Id" data-iid="@i.Id" data-name="@i.PrettyName" />
}
<h4 class="page-header">@Model.Interfaces.Count.Pluralize("Network Interface")</h4>
<table class="table table-striped table-middle table-super-condensed table-responsive text-nowrap">
    <thead>
        <tr>
            <th>Interface</th>
            <th>Speed</th>
            <th>In</th>
            <th></th>
            <th>Out</th>
            <th></th>
        </tr>
    </thead>
    <tbody class="js-interfaces">
        @foreach (var i in Model.Interfaces.OrderBy(i => !i.IsTeam).ThenBy(i => i.Index))
        {
            <tr class="@i.RowClass()">
                <td class="@(Model.PrimaryInterfaces.Contains(i) ? "primary-interface" : "")" title="@i.FullName
                    last updated @i.LastSync.ToRelativeTime() " data-val="@i.Index.ToString()">
                    @i.IconSpan()
                    @i.PrettyName
                </td>
                <td class="nowrap@(i.Speed > 10L*1000*1000*1000 ? " very-fast" : i.Speed >= 10L*1000*1000*1000 ? " fast" : "")" data-val="@($"{i.Speed:F0}")">@i.PrettySpeed</td>
                <td data-val="@($"{i.InBps:F0}")">@i.PrettyIn()</td>
                <td data-val="@($"{i.InBps:F0}")">@Graph(i, "in")</td>
                <td data-val="@($"{i.OutBps:F0}")">@i.PrettyOut()</td>
                <td data-val="@($"{i.OutBps:F0}")">@Graph(i, "out")</td>
            </tr>
        }
    </tbody>
</table>
<script>
    $('.js-content').on('click', '.js-interfaces .js-dashboard-spark', function () {
        $('#dashboard-chart').empty().networkGraph({
            id: $(this).data('nid'),
            iid: $(this).data('iid'),
            title: 'Network Utilization',
            subtitle: $(this).data('name')
        });

        $('#spark-detail').modal({
            overlayClose: true,
            onClose: function (dialog) {
                dialog.data.fadeOut('fast', function () {
                    dialog.container.hide('fast', function () {
                        $.modal.close();
                    });
                });
            }
        });
    })
</script>