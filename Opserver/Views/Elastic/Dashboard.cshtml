@using System.Collections.Specialized
@using StackExchange.Opserver.Data.Elastic
@using StackExchange.Opserver.Views.Elastic
@model DashboardModel
@{
    Layout = "~/Views/Shared/Master.cshtml";
    this.SetPageTitle("elasticsearch Dashboard");
    this.SetTopNodes(ElasticCluster.AllClusters,
        "elastic clusters",
        Model.Current?.Cluster);
}
@section head {
    <script>
        $(function() {
            Status.Dashboard.init({ refresh: @(Model.Refresh.ToString()) });
            @if (Model.Current != null)
            {
            @:Status.Elastic.init({ cluster: '@Model.Current.ClusterName', node: '@Model.Current.NodeName' });
            }
        });
    </script>
}
@helper TabLink(DashboardModel.Views view, string href, string name, bool includeCluster = true, bool includeNode = false)
{
    var nvc=  new NameValueCollection();
    if (includeCluster && (Model.Current?.ClusterName.HasValue() ?? false))
    {
        nvc.Add("cluster", Model.Current?.ClusterName);
    }
    if (includeNode && (Model.Current?.NodeName.HasValue() ?? false))
    {
        nvc.Add("node", Model.Current?.NodeName);
    }
    var query = nvc.ToQueryString();

    <li class="@(Model.View == view ? "active" : null)"><a href="@href@query">@name</a></li>
}
<ul class="nav nav-tabs nav-tabs-right">
    @TabLink(DashboardModel.Views.AllClusters, "/elastic", "all clusters", false)
    @TabLink(DashboardModel.Views.Cluster, "/elastic/cluster", "cluster")
    @TabLink(DashboardModel.Views.Node, "/elastic/node", "node", includeNode: true)
    @TabLink(DashboardModel.Views.Indices, "/elastic/indices", "indices")
</ul>
<div>
    @if (Model.View == DashboardModel.Views.Node && (Model.Current?.Node == null))
    {
        @Html.Partial("Node.Selector")
    }
    else if ((Model.View == DashboardModel.Views.Cluster || Model.View == DashboardModel.Views.Indices) && (Model.Current?.Cluster == null))
    {
        @Html.Partial("Cluster.Selector")
    }
    @RenderBody()
</div>