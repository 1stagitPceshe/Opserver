@model StackExchange.Opserver.Views.PagerDuty.PagerDutyIncidentModel
@{
    Layout = null;
    this.SetPageTitle("PagerDuty Incident Email");
    var i = Model.Incident;
    var acked = i.AcknowledgedBy != null && i.AcknowledgedBy.Any() ? "List" : "Nobody";
    var isSubjectOnly = i.SummaryData?.Count == 1 && i.SummaryData.ContainsKey("subject");
}
<div class="incident-details" data-title="Incident: @i.Number">
    <dl>
        @if (isSubjectOnly)
        {
            <dt>Subject</dt>
            <dd>@i.SummaryData["subject"]</dd>
        }
        <dt>Service</dt>
        <dd>@i.AffectedService.Name</dd>

        <dt>Link</dt>
        <dd><a href="@i.Uri" target="_blank">@(i.Uri.Split('/').Last())</a></dd>

        <dt>Status</dt>
        <dd class="@i.TextClass()">@i.Status.GetDescription()</dd>

        <dt>Acknowledged By</dt>
        <dd>@acked</dd>

        @if (i.ResolvedBy != null)
        {
            <dt>Resolved By</dt>
            <dd>@i.ResolvedBy.FullName</dd>
        }

        @if (i.LastChangedBy != null)
        {
            <dt>Last Change</dt>
            <dd>@i.LastChangedBy.FullName - @i.LastChangedOn.ToRelativeTimeSpan()</dd>
        }
    </dl>
    @if (!isSubjectOnly && i.SummaryData != null && i.SummaryData.Any())
    {
        <table>
            <thead>
                <tr>
                    <th colspan="2">Summary</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var s in i.SummaryData)
            {
                <tr>
                    <td class="bold">@s.Key</td>
                    <td>@s.Value</td>
                </tr>
            }
            </tbody>
        </table>
    }
    <h4 class="page-header">Incident Log</h4>
    <table class="table table-striped table-hover table-responsive text-nowrap">
        <thead>
            <tr>
                <th>Time</th>
                <th>Type</th>
                <th>Message</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var l in Model.Logs)
        {
            <tr>
                <td>@l.CreationTime.ToRelativeTimeSpan()</td>
                <td>@l.LogType.ToTitleCase()</td>
                <td>@l.Detail.Message</td>
                <td>@l.Note</td>
            </tr>
        }
        </tbody>
    </table>
</div>