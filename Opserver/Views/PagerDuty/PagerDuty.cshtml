@model StackExchange.Opserver.Views.PagerDuty.PagerDutyModel
@{
    Layout = "~/Views/Shared/Master.cshtml";
    this.SetPageTitle("PagerDuty");

}
@section head {
    <style>
        .striped-dashboard {
            width: 900px;
        }
        .incident-details {
            min-width: 600px;
        }
        .incident-details .key {
            color: #888;
        }
        .incident-details ul li {
            padding: 2px 4px;
        }
        .incident-details ul li table {
            margin: 10px 20px 5px 20px;
            min-width: 560px;
        }
        .incident-details ul li table tr th {
            font-weight: bold;
            border-bottom: solid 1px #EEE;
        }
        .incident-details ul li table tr th, .incident-details ul li table tr td {
            padding: 2px 5px;
        }
    </style>
}
<div class="dashboard-list">
    <table class="striped-dashboard">
        <tbody class="node-header">
        <tr class="category-row">
            <th colspan="8">
                <h3>On Call (<a href="#/pagerduty/escalation/full">Full Schedule</a>)
                </h3>
            </th>
        </tr>
        <tr>
            <th>Name</th>
            <th>Level</th>
            <th>Email</th>
            <th>Phone</th>
        </tr>
        @foreach (var p in Model.AllOnCall.OrderBy(u => u.CurrentEscalationLevel).Take(Model.OnCallToShow))
        {
            @Html.Partial("PagerDuty.OnCallRow", p)
        }
        </tbody>
    </table>

    <div class="node-dashboard-separator half-width"></div>

    <table class="striped-dashboard">
        <tbody class="node-header">
            <tr class="category-row">
                <th colspan="8">
                    <h3>Incidents: Last 30 Days</h3>
                </th>
            </tr>
            <tr class="node-group">
                <th>Id</th>
                <th></th>
                <th>Service</th>
                <th>Status</th>
                <th>Summary</th>
            </tr>
        </tbody>
        <tbody class="node-group">

        @foreach (var i in Model.AllIncidents.OrderByDescending(i => i.CreationDate))
        {
            <tr class="server-row @i.MonitorStatus.RowClass()">
                <td><a href="#/pagerduty/incident/detail/@i.Number">@i.Number</a></td>
                <td>@i.CreationDate.ToRelativeTimeSpan()</td>
                <td>@i.AffectedService.Name</td>
                <td class="@i.MonitorStatus.Class()">@i.Status.ToTitleCase()</td>
                <td>
                    @if (i.SummaryData.Keys.Contains("subject"))
                    {
                        @i.SummaryData["subject"]
                    }
                </td>
            </tr>
        }
        </tbody>

    </table>
</div>


    <script>
        $.extend(Status.ajaxLoaders, {
            '#/pagerduty/incident/': function (val) {
                console.log(val);
                Status.summaryPopup('/pagerduty/incident/' + val);
            },
            '#/pagerduty/escalation/': function (val) {
                console.log(val);
                Status.summaryPopup('/pagerduty/escalation/' + val);
            }
        });
    </script>


