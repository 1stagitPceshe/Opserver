@using StackExchange.Opserver.Data.PagerDuty
@model StackExchange.Opserver.Views.PagerDuty.PagerDutyModel
@{
    Layout = Current.IsAjaxRequest ? null : "~/Views/Shared/Master.cshtml";
    this.SetPageTitle("PagerDuty");
    var settings = Current.Settings.PagerDuty;
}
@helper GetOverrideAction(string incident = null, string status = null)
{
    if (Model.CurrentPagerDutyPerson != null && Current.User.IsGlobalAdmin)
    {
        @:<span class="pull-right"><a href="#" class="js-override-action">Take on Call</a> (1hr)</span>
    }
}

@helper GetIncidentAction(IncidentStatus status)
{
    if (Model.CurrentPagerDutyPerson == null) { return; }
    switch (status)
    {
        case IncidentStatus.acknowledged:
            <a href="#" class="js-incident-action" data-action="@IncidentStatus.resolved">Resolve</a>
            break;
        default:
            <a href="#" class="js-incident-action" data-action="@IncidentStatus.acknowledged">Ack</a>
            <a href="#" class="js-incident-action" data-action="@IncidentStatus.resolved">Resolve</a>
            break;
    }
}

@section head {
    <script>
        Status.Dashboard.init({ refresh: 5 });
        $(function() {
            $.extend(Status.ajaxLoaders, {
                '#/pagerduty/incident/': function (val) {
                    Status.ajaxModal('Incident', '/pagerduty/incident/' + val);
                },
                '#/pagerduty/escalation/': function(val) {
                    Status.ajaxModal('Schedule', '/pagerduty/escalation/' + val);
                }
            });
            $(".js-incident-action").on('click', function(e) {
                e.preventDefault();
                $.post('/pagerduty/action/incident/updatestatus', {
                    'newStatus': $(this).data('action'),
                    'incident': $(this).closest('[data-incident]').data('incident')
                }).done(function() {
                    Status.refresh.run();
                });
            });
            $(".js-override-action").on('click', function (e) {
                e.preventDefault();
                $.post('/pagerduty/action/oncall/override').done(function () {
                    Status.refresh.run();
                });
            });
        });
    </script>
}
<div>
    @if (settings.HeaderTitle.HasValue() || settings.HeaderHtml.HasValue())
    {
        <div class="panel panel-default">
            @if (settings.HeaderTitle.HasValue())
            {
                <div class="panel-heading">
                    @settings.HeaderTitle
                </div>
            }
            @if (settings.HeaderHtml.HasValue())
            {
                <div class="panel-body small">
                    @settings.HeaderHtml.AsHtml()
                </div>
            }
        </div>
    }
    <div class="js-refresh-group" data-name="PagerDuty">
        <h5 class="page-header">On Call (<a href="#/pagerduty/escalation/full">Full Schedule</a>) @GetOverrideAction()</h5>
        <table class="table table-striped table-hover table-condensed table-responsive text-nowrap">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Level</th>
                    <th>Email</th>
                    <th>Phone</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var a in Model.Schedule.Take(Model.OnCallToShow))
            {
                @Html.Partial("PagerDuty.OnCallRow", a)
            }
            </tbody>
        </table>

        <div class="node-dashboard-separator half-width"></div>

        <h5 class="page-header">
            Incidents: Last @Model.CachedDays Days
            @Helpers.PollNow(PagerDutyApi.Instance)
        </h5>
        <table class="table table-striped table-hover table-condensed table-responsive text-nowrap">
            <thead>
                <tr>
                    <th>Id</th>
                    <th></th>
                    <th>Service</th>
                    <th>Status</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var i in Model.AllIncidents.OrderByDescending(i => i.CreationDate))
            {
                <tr class="server-row @i.MonitorStatus.RowClass()" data-incident="@i.Id">
                    <td><a href="#/pagerduty/incident/detail/@i.Number">@i.Number</a></td>
                    <td>@i.CreationDate.ToRelativeTimeSpan()</td>
                    <td>@i.AffectedService.Name</td>
                    <td>
                        <span class="@i.TextClass()">@i.Status.GetDescription()</span>
                        @if (i.LastChangedBy != null)
                        {
                            if (@i.Status == IncidentStatus.triggered || @i.Status == IncidentStatus.acknowledged)
                            {
                                <span class="note">(@i.LastChangedBy.FullName)</span>
                                @GetIncidentAction(i.Status)
                            }
                            else
                            {
                                <span class="note">(@i.LastChangedBy.FullName)</span>
                            }

                        }
                        else if (@i.Status == IncidentStatus.triggered || @i.Status == IncidentStatus.acknowledged)
                        {
                            @GetIncidentAction(i.Status)
                        }
                    </td>
                    <td>
                        @if (i.SummaryData.Keys.Contains("subject"))
                        {
                            @i.SummaryData["subject"]
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>